SELECT *
FROM PortfolioProject..CovidDeaths
Where continent is not NULL
ORDER BY 3,4

--SELECT *
--FROM PortfolioProject..CovidDeaths
--ORDER BY 3,4

--Select Data that we will be using 

SELECT continent, date, total_cases, new_cases, total_deaths, population
FROM PortfolioProject..CovidDeaths
Where continent is not NULL
ORDER BY 1,2

-- Looking at Total Cases vs Total Deaths
--Shows likelihood of dying if you contract covid in your country
SELECT continent, date, total_cases, new_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathPercentage
FROM PortfolioProject..CovidDeaths
--WHERE location like '%states%'
WHERE continent is not NULL
ORDER BY 1,2

--Looking at the Total Cases VS Population
--Shows what percentage of population got covid

SELECT continent, date, population, total_cases,(total_cases/population)*100 AS DeathPercentage
FROM PortfolioProject..CovidDeaths
--WHERE location like '%states%'
ORDER BY 1,2

--Looking at countries with the highest infection rate compared to population

SELECT continent, population, MAX(total_cases) AS HighestInfectionCount, MAX(total_cases/population)*100 AS InfectedPopulationPercentage
FROM PortfolioProject..CovidDeaths
--WHERE location like '%states%'
GROUP BY continent, population
ORDER BY InfectedPopulationPercentage DESC;

--Showing the countries with the Highest Death Count per Population

SELECT continent, MAX(total_deaths) AS TotalDeathCount
FROM PortfolioProject..CovidDeaths
--WHERE location like '%states%'
Where continent is not NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC;

--LET'S BREAK THINGS DOWN BY CONTINENT
--Showing the continents with the highest death counts

SELECT continent, MAX(total_deaths) AS TotalDeathCount
FROM PortfolioProject..CovidDeaths
--WHERE location like '%states%'
Where continent is NOT NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC;


-- Global Numbers

SELECT SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths, SUM(new_deaths)/ SUM(new_cases)*100 AS DeathPercetange
FROM PortfolioProject..CovidDeaths
--WHERE location like '%states%'
WHERE continent is not NULL
--GROUP BY date
ORDER BY 1,2

--Looking at Total Population VS Vaccinations

-- USE CTE
With PopvsVac (continent, Location, date, Population, new_vaccinations, RollingPeopleVaccinated)
AS
(
SELECT deaths.continent, deaths.location, deaths.date, deaths.population, Vacc.new_vaccinations
, SUM(CONVERT(int, vacc.new_vaccinations)) OVER (partition by deaths.location ORDER by Deaths.location, deaths.date) AS RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM PortfolioProject..CovidDeaths AS deaths
JOIN PortfolioProject..CovidVaccinations AS Vacc
ON deaths.location = Vacc.location
AND deaths.date = Vacc.date
WHERE deaths.continent IS NOT NULL
--ORDER BY 2,3
)
--USE CTE
SELECT *, (RollingPeopleVaccinated/Population)*100
FROM PopvsVac

--TEMP TABLE

-- Create a new table called '[#PercentPopulationVaccinated]' in schema '[dbo]'
-- Drop the table if it already exists
IF OBJECT_ID('[dbo].[#PercentPopulationVaccinated]', 'U') IS NOT NULL
DROP TABLE [dbo].[#PercentPopulationVaccinated]
GO
-- Create the table in the specified schema
CREATE TABLE [dbo].[#PercentPopulationVaccinated]
(
    [Id] INT NOT NULL PRIMARY KEY, -- Primary Key column
    [Continent] NVARCHAR(255),
    [Location] NVARCHAR(255),
    [Date] DATETIME,
    [Population] NUMERIC,
    [New_vaccinations] NUMERIC,
    [RollingPeopleVaccinated] NUMERIC
);
GO
INSERT INTO #PercentPopulationVaccinated
SELECT deaths.continent, deaths.location, deaths.date, deaths.population, Vacc.new_vaccinations
, SUM(CONVERT(int, vacc.new_vaccinations)) OVER (partition by deaths.location ORDER by Deaths.location, deaths.date) AS RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM PortfolioProject..CovidDeaths AS deaths
JOIN PortfolioProject..CovidVaccinations AS Vacc
ON deaths.location = Vacc.location
AND deaths.date = Vacc.date
WHERE deaths.continent IS NOT NULL
--ORDER BY 2,3


SELECT *, (RollingPeopleVaccinated/Population)*100
FROM #PercentPopulationVaccinated


--Creating View to store data for later

CREATE VIEW PercentPopulationVaccinated AS
SELECT deaths.continent, deaths.location, deaths.date, deaths.population, Vacc.new_vaccinations
, SUM(CONVERT(int, vacc.new_vaccinations)) OVER (partition by deaths.location ORDER by Deaths.location, deaths.date) AS RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM PortfolioProject..CovidDeaths AS deaths
JOIN PortfolioProject..CovidVaccinations AS Vacc
ON deaths.location = Vacc.location
AND deaths.date = Vacc.date
WHERE deaths.continent IS NOT NULL
--ORDER BY 2,3

SELECT *
FROM #PercentPopulationVaccinate